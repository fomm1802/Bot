import discord
from discord.ext import commands
from datetime import datetime
import logging
import asyncio


class VoiceEvents(commands.Cog):
    """‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á"""

    def __init__(self, bot):
        self.bot = bot

    @commands.Cog.listener()
    async def on_voice_state_update(self, member, before, after):
        """‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á"""
        # ‡∏Ç‡πâ‡∏≤‡∏°‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡∏≠‡∏ó
        if member.bot:
            return

        # ‡∏î‡∏∂‡∏á ID ‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏à‡∏≤‡∏Å config
        notify_channel_id = self.bot.config.get("notify_channel_id")
        channel = self.bot.get_channel(notify_channel_id)

        if not channel:
            logging.warning("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏ô config.json")
            return

        # ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
        def create_embed(event_type, member, before_channel=None, after_channel=None):
            now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            embed = discord.Embed(timestamp=datetime.now(), color=discord.Color.blue())
            embed.set_author(name=member.display_name, icon_url=member.display_avatar.url)
            if event_type == "join":
                embed.title = "üîä ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á"
                embed.description = f"**{member.display_name}** ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á: `{after_channel}`"
            elif event_type == "leave":
                embed.title = "üîá ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á"
                embed.description = f"**{member.display_name}** ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á: `{before_channel}`"
            elif event_type == "move":
                embed.title = "üîÄ ‡∏¢‡πâ‡∏≤‡∏¢‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á"
                embed.description = f"**{member.display_name}** ‡∏¢‡πâ‡∏≤‡∏¢‡∏à‡∏≤‡∏Å `{before_channel}` ‡πÑ‡∏õ‡∏¢‡∏±‡∏á `{after_channel}`"
            embed.set_footer(text=f"‡πÄ‡∏ß‡∏•‡∏≤ {now}")
            return embed

        # ‡∏Å‡∏£‡∏ì‡∏µ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á
        if before.channel is None and after.channel is not None:
            if after.channel.name == "Join Here":
                await asyncio.sleep(1)
                after = member.voice
            await channel.send(embed=create_embed("join", member, after_channel=after.channel.name))

        # ‡∏Å‡∏£‡∏ì‡∏µ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á
        elif before.channel is not None and after.channel is None:
            await channel.send(embed=create_embed("leave", member, before_channel=before.channel.name))

        # ‡∏Å‡∏£‡∏ì‡∏µ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á
        elif before.channel != after.channel:
            if before.channel.name == "Join Here":
                return
            await channel.send(embed=create_embed("move", member, before_channel=before.channel.name, after_channel=after.channel.name))


async def setup(bot):
    """‡πÄ‡∏û‡∏¥‡πà‡∏° Cog ‡∏ô‡∏µ‡πâ‡∏•‡∏á‡πÉ‡∏ô‡∏ö‡∏≠‡∏ó"""
    await bot.add_cog(VoiceEvents(bot))
